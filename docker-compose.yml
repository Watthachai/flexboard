version: '3.8'

services:
  # Service สำหรับ Agent API
  onprem-agent-api:
    # สั่งให้ build จาก Dockerfile ในโฟลเดอร์ที่ระบุ
    build:
      context: ./apps/onprem-agent-api
      dockerfile: Dockerfile
    # ตั้งชื่อ Container
    container_name: flexboard-agent-api
    # Restart container เสมอถ้ามันล่ม
    restart: unless-stopped
    # กำหนด Environment Variables - ลูกค้าจะต้องสร้างไฟล์ .env
    environment:
      # สำคัญมาก! ต้องแก้ให้ตรงกับ Database ของลูกค้า
      DATABASE_URL: "${DATABASE_URL}"
      # Control Plane Configuration (Phase 2)
      CONTROL_PLANE_URL: "${CONTROL_PLANE_URL:-http://localhost:3000}"
      FLEXBOARD_API_KEY: "${FLEXBOARD_API_KEY:-fxb_demo_key}"
      # Server Configuration  
      NODE_ENV: "${NODE_ENV:-production}"
      PORT: "${AGENT_PORT:-3001}"
      # CORS for Viewer
      CORS_ORIGIN: "http://onprem-viewer-ui:3000"
      # Agent Configuration
      AGENT_VERSION: "${AGENT_VERSION:-1.0.0}"
      SYNC_INTERVAL: "${SYNC_INTERVAL:-300000}"
    # เปิด port 3001 ของ container ให้แมพกับ port 3001 ของเครื่อง host
    ports:
      - "3001:3001"
    # ทำให้ container นี้อยู่ใน network ชื่อ 'flexboard-net'
    networks:
      - flexboard-net

  # Service สำหรับ Viewer UI
  onprem-viewer-ui:
    build:
      context: ./apps/onprem-viewer-ui
      dockerfile: Dockerfile
    container_name: flexboard-viewer-ui
    restart: unless-stopped
    environment:
      # บอก Next.js ให้เรียก API จาก container ชื่อ 'onprem-agent-api'
      # Docker Compose จะ resolve ชื่อนี้ให้เป็น IP ภายใน Docker network
      NEXT_PUBLIC_API_URL: "http://onprem-agent-api:3001"
      PORT: 3000
    ports:
      - "3000:3000"
    # ทำให้ container นี้เชื่อมต่อกับ agent-api ได้
    depends_on:
      - onprem-agent-api
    networks:
      - flexboard-net

# กำหนด Network กลาง
networks:
  flexboard-net:
    driver: bridge